React Hooks
_____________________
Hooks are new addition in React 16.8
They let you use state and other react features without writing class.
React hook is alternative approach of state management and lifecycle method .There are many hooks used for different purposses . Some of them are useReducer,useState,useCallBack,useMemo,useRef,useDispatcher.

Component lifecycle
_____________________
1. Initialization - This is the stage where is component is constructed with the given props and default state .This is done in the constructor of component class.
2. Monitoring - Monitoring is the stage of rendering the jsx returned by the render method itself.
3. Updating - Updating is the stage when the state of a component is updated and the applicattion is repainted.
4.Unmounting - Unmaunting is the final step of the component is removed from the page.

Hooks
_____________________
1. useState Hooks - 
It can be used in functional based component only.
Syntax -- 
const [selectedRoom,setSelectedRoom] = useState(initialValue)

useState
_____________________
useState is a hook in React that allows you to add state to functional components. 
State is a way of storing and managing data that affects a component's rendering and behavior. useState returns an array with two elements: the current state value, and a function that can be used to update it.
Example ---
import React, { useState } from 'react';

function Example() {
  const [count, setCount] = useState(0);

  return (
    <div>
      <p>You clicked {count} times</p>
      <button onClick={() => setCount(count + 1)}>
        Click me
      </button>
    </div>
  );
}
